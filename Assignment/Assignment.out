\BOOKMARK [0][]{chapter.1}{Introduction}{}% 1
\BOOKMARK [0][]{chapter.2}{Network Programming in Java}{}% 2
\BOOKMARK [1][]{section.2.1}{Sockets in Java}{chapter.2}% 3
\BOOKMARK [2][]{subsection.2.1.1}{TCP Socket}{section.2.1}% 4
\BOOKMARK [2][]{subsection.2.1.2}{UDP Socket}{section.2.1}% 5
\BOOKMARK [1][]{section.2.2}{Java Remote Method Invocation}{chapter.2}% 6
\BOOKMARK [1][]{section.2.3}{Sockets vs RMI}{chapter.2}% 7
\BOOKMARK [0][]{chapter.3}{Job Server/Client Architecture}{}% 8
\BOOKMARK [1][]{section.3.1}{Overall Architecture}{chapter.3}% 9
\BOOKMARK [1][]{section.3.2}{UDP-Multicast}{chapter.3}% 10
\BOOKMARK [1][]{section.3.3}{The Job Server}{chapter.3}% 11
\BOOKMARK [1][]{section.3.4}{The Job Client}{chapter.3}% 12
\BOOKMARK [1][]{section.3.5}{Load Balancing}{chapter.3}% 13
\BOOKMARK [0][]{chapter.4}{Other possible solutions}{}% 14
\BOOKMARK [1][]{section.4.1}{Using TCP instead of UDP for multicast replies}{chapter.4}% 15
\BOOKMARK [1][]{section.4.2}{Using sockets instead of RMI}{chapter.4}% 16
\BOOKMARK [1][]{section.4.3}{Load Balancer}{chapter.4}% 17
\BOOKMARK [2][]{subsection.4.3.1}{static load-balancing}{section.4.3}% 18
\BOOKMARK [2][]{subsection.4.3.2}{dynamic load-balancing}{section.4.3}% 19
\BOOKMARK [0][]{chapter.5}{Conclusion}{}% 20
